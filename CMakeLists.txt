OPTION(CPBRT_FLOAT_AS_DOUBLE "Use 64-bit floats" OFF)
IF (CPBRT_FLOAT_AS_DOUBLE)
  ADD_DEFINITIONS( -D CPBRT_FLOAT_AS_DOUBLE )
ENDIF()

OPTION(CPBRT_SAMPLED_SPECTRUM "Use SampledSpectrum rather than RGBSpectrum" OFF)
IF (CPBRT_SAMPLED_SPECTRUM)
  ADD_DEFINITIONS( -D CPBRT_SAMPLED_SPECTRUM )
ENDIF()

CHECK_CXX_SOURCE_COMPILES (
  "int main() { constexpr int x = 0; }"
  HAVE_CONSTEXPR )
IF ( HAVE_CONSTEXPR )
  ADD_DEFINITIONS ( -D CPBRT_HAVE_CONSTEXPR )
  ADD_DEFINITIONS ( -D CPBRT_CONSTEXPR=constexpr )
ELSE ()
  ADD_DEFINITIONS ( -D CPBRT_CONSTEXPR=const )
ENDIF ()

CHECK_CXX_SOURCE_COMPILES (
  "int main() { float x = 0x1p-32f; }"
  HAVE_HEX_FP_CONSTANTS )
IF ( HAVE_HEX_FP_CONSTANTS )
  ADD_DEFINITIONS ( -D CPBRT_HAVE_HEX_FP_CONSTANTS )
ENDIF ()

# Check if binary constants are supported by the compiler.
# Otherwise, code will have to use HEX in bit-level operations.
# Binary constant: 0b00000011000000000000000011111111
# Corresponding HEX: 0x30000ff
CHECK_CXX_SOURCE_COMPILES (
  "int main() { int x = 0b101011; }"
  HAVE_BINARY_CONSTANTS )
IF ( HAVE_BINARY_CONSTANTS )
  ADD_DEFINITIONS ( -D CPBRT_HAVE_BINARY_CONSTANTS )
ENDIF ()